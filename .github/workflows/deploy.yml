name: Build and Deploy Compilation to Repository

on:
  push:
    branches:
      - main
  workflow_dispatch: # Permet une exécution manuelle

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Get the latest commit SHA
        id: get_commit_sha
        run: |
          LATEST_SHA=$(curl -s https://api.github.com/repos/${{ github.repository }}/commits/main | jq -r .sha)
          echo "LATEST_SHA=$LATEST_SHA" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the previous commit SHA
        id: get_previous_commit_sha
        run: |
          PREV_SHA=$(curl -s https://api.github.com/repos/${{ github.repository }}/commits?per_page=2 | jq -r '.[1].sha')
          echo "PREV_SHA=$PREV_SHA" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for changes in src/
        id: check_changes
        run: |
          # Utilise les SHA stockés dans les variables d'environnement
          CHANGES=$(curl -s https://api.github.com/repos/${{ github.repository }}/compare/${{ env.PREV_SHA }}...${{ env.LATEST_SHA }} | jq -r '.files[] | select(.filename | startswith("src/")) | .filename')

          if [ -n "$CHANGES" ]; then
            echo "Changes detected in src/ directory."
            echo "CHANGES=true" >> $GITHUB_ENV
          else
            echo "No changes detected in src/ directory."
            echo "CHANGES=false" >> $GITHUB_ENV
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug CHANGES variable
        run: echo "CHANGES is $CHANGES"

      - name: Install dependencies
        if: env.CHANGES == 'true'
        run: npm install

      - name: Clean TypeScript output directory
        if: env.CHANGES == 'true'
        run: npm run ts:clean

      - name: Build TypeScript
        if: env.CHANGES == 'true'
        run: npm run ts:build

      - name: List files in dist/
        if: env.CHANGES == 'true'
        run: ls -R dist/

      - name: Temporarily modify .gitignore
        if: env.CHANGES == 'true'
        run: |
          # Supprimer les entrées .gitignore pour /dist et *.js
          sed -i '/dist\/libs/d' .gitignore || true
          sed -i '/dist\/services/d' .gitignore || true
          sed -i '/\.js/d' .gitignore || true

      - name: Check files staged for commit
        if: env.CHANGES == 'true'
        run: git diff --cached --name-only

      - name: Add all files in dist/
        if: env.CHANGES == 'true'
        run: git add dist/

      - name: Configure Git
        if: env.CHANGES == 'true'
        run: |
          git config user.name "Kyu2Bot"
          git config user.email "178714696+Kyu2Bot@users.noreply.github.com"
          git config --list

      - name: Commit and push dist folder
        if: env.CHANGES == 'true'
        run: |
          git commit -m "[Bot] JS compiled for the new version. See details: ${LATEST_SHA}" -m "Co-authored-by: Kyuddle <169302941+Kyuddle@users.noreply.github.com>"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Restore .gitignore
        if: env.CHANGES == 'true'
        run: git checkout .gitignore

      - name: Clean up workspace
        if: env.CHANGES == 'true'
        run: |
          rm -rf dist/
          rm -rf node_modules/
          npm cache clean --force
