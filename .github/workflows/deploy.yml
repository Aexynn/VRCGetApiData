name: Build and Deploy Compilation to Repository
on:
  push:
    branches:
      - main
  workflow_dispatch: # Permet une exécution manuelle

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Check for changes in src/
      id: check_changes
      run: |
        git fetch origin main
        # Check if there are changes in src/
        if git diff --name-only HEAD origin/main | grep '^src/'; then
          echo "Changes detected in src/ directory."
          echo "CHANGES=true" >> $GITHUB_ENV
        else
          echo "No changes detected in src/ directory."
          echo "CHANGES=false" >> $GITHUB_ENV
        fi

    - name: Get previous commit SHA
      if: env.CHANGES == 'true'
      id: get_previous_commit
      run: |
        # Get the previous commit SHA
        PREV_COMMIT_SHA=$(git rev-parse HEAD^1)
        echo "PREV_COMMIT_SHA=$PREV_COMMIT_SHA" >> $GITHUB_ENV
        
    - name: Install dependencies
      if: env.CHANGES == 'true'
      run: npm install
      
    - name: Clean TypeScript output directory
      if: env.CHANGES == 'true'
      run: npm run ts:clean
      
    - name: Build TypeScript
      if: env.CHANGES == 'true'
      run: npm run ts:build
        
    - name: Configure Git
      if: env.CHANGES == 'true'
      run: |
        git config user.name "Kyu2Bot"
        git config user.email "178714696+Kyu2Bot@users.noreply.github.com"
        git config --list # Vérifiez la configuration Git pour confirmer les valeurs

    - name: Temporarily modify .gitignore
      if: env.CHANGES == 'true'
      run: |
        sed -i '/dist/d' .gitignore

    - name: Commit and push dist folder
      if: env.CHANGES == 'true'
      run: |
        # Add dist folder
        git add dist
        # Commit changes with co-author and description
        COMMIT_MESSAGE="[Bot] JS compiled for the new version. See details: ${PREV_COMMIT_SHA}"
        git commit -m "$COMMIT_MESSAGE" -m "Co-authored-by: Kyuddle <169302941+Kyuddle@users.noreply.github.com>"
        # Push changes
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    - name: Restore .gitignore
      if: env.CHANGES == 'true'
      run: |
        # Restore the original .gitignore
        git checkout .gitignore
