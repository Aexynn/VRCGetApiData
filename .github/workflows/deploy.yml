name: Build and Deploy Compilation to Repository

on:
  push:
    branches:
      - main
  workflow_dispatch: # Permet une exÃ©cution manuelle

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Fetch changes from main
        run: |
          git fetch origin main

      - name: Get previous commit SHA
        id: get_previous_commit
        run: |
          PREV_COMMIT_SHA=$(git rev-parse HEAD^1)
          echo "PREV_COMMIT_SHA=$PREV_COMMIT_SHA" >> $GITHUB_ENV

      - name: Check for changes in src/
        id: check_changes
        run: |
          # Get the SHA of the previous commit from environment
          PREV_COMMIT_SHA=${{ env.PREV_COMMIT_SHA }}

          # List all changed files between the previous commit and the current one
          CHANGED_FILES=$(git diff --name-only $PREV_COMMIT_SHA HEAD)
          echo "Changed files:"
          echo "$CHANGED_FILES"

          # Check if there are changes in the src/ directory
          if echo "$CHANGED_FILES" | grep -q '^src/'; then
            echo "Changes detected in src/ directory."
            echo "CHANGES=true" >> $GITHUB_ENV
          else
            echo "No changes detected in src/ directory."
            echo "CHANGES=false" >> $GITHUB_ENV
          fi

      - name: Debug CHANGES variable
        run: echo "CHANGES is $CHANGES"

      - name: Install dependencies
        if: env.CHANGES == 'true'
        run: npm install

      - name: Clean TypeScript output directory
        if: env.CHANGES == 'true'
        run: npm run ts:clean

      - name: Build TypeScript
        if: env.CHANGES == 'true'
        run: npm run ts:build

      - name: Configure Git
        if: env.CHANGES == 'true'
        run: |
          git config user.name "Kyu2Bot"
          git config user.email "178714696+Kyu2Bot@users.noreply.github.com"
          git config --list

      - name: Temporarily modify .gitignore
        if: env.CHANGES == 'true'
        run: |
          sed -i '/dist/d' .gitignore

      - name: Commit and push dist folder
        if: env.CHANGES == 'true'
        run: |
          git add dist
          git commit -m "[Bot] JS compiled for the new version. See details: ${PREV_COMMIT_SHA}" -m "Co-authored-by: Kyuddle <169302941+Kyuddle@users.noreply.github.com>"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Restore .gitignore
        if: env.CHANGES == 'true'
        run: |
          git checkout .gitignore
